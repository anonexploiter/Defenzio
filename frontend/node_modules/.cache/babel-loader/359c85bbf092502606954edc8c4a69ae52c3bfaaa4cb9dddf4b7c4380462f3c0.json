{"ast":null,"code":"var _jsxFileName = \"D:\\\\pl\\\\Defenzio\\\\frontend\\\\src\\\\pages\\\\instructions.jsx\";\nimport React from 'react';\nimport './Instructions.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Instructions() {\n  const downloadfile = () => {\n    const downloadFile = (fileUrl, fileName) => {\n      const link = document.createElement('a');\n      link.href = fileUrl;\n      link.download = fileName;\n      link.click();\n    };\n    downloadFile(process.env.PUBLIC_URL + '/collectlogs.zip', 'collectlogs.zip');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"instructions\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Installation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"code\",\n        children: [\"git clone https://gitlab.com/hieulw/cicflowmeter\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \"cd cicflowmeter\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \"python setup.py install\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"or\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"code\",\n        children: \"pip install cicflowmeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"code\",\n        children: [\"usage: cicflowmeter [-h] (-i INPUT_INTERFACE | -f INPUT_FILE) [-c] [-u URL_MODEL] output\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), \"positional arguments:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \"output output file name (in flow mode) or directory (in sequence mode)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \"optional arguments:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \"-h, --help show this help message and exit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \"-i INPUT_INTERFACE capture online data from INPUT_INTERFACE\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \"-f INPUT_FILE capture offline data from INPUT_FILE\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \"-c, --csv, --flow output flows as csv\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Convert pcap file to flow csv:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"code\",\n        children: \"cicflowmeter -f example.pcap -c flows.csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sniff packets real-time from interface to flow csv: (need root permission)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"code\",\n        children: \"cicflowmeter -i eth0 -c flows.csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      style: {\n        paddingLeft: \"50%\"\n      },\n      children: \" or \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: downloadfile,\n        className: \"upload-button\",\n        children: \"Download Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Instructions;\nexport default Instructions;\nvar _c;\n$RefreshReg$(_c, \"Instructions\");","map":{"version":3,"names":["React","Navbar","jsxDEV","_jsxDEV","Instructions","downloadfile","downloadFile","fileUrl","fileName","link","document","createElement","href","download","click","process","env","PUBLIC_URL","className","children","_jsxFileName","lineNumber","columnNumber","style","paddingLeft","onClick","_c","$RefreshReg$"],"sources":["D:/pl/Defenzio/frontend/src/pages/instructions.jsx"],"sourcesContent":["import React from 'react';\nimport './Instructions.css';\nimport Navbar from './Navbar';\nfunction Instructions() {\n  const downloadfile = () => {\n    const downloadFile = (fileUrl, fileName) => {\n      const link = document.createElement('a');\n      link.href = fileUrl;\n      link.download = fileName;\n      link.click();\n    };\n\n    downloadFile(process.env.PUBLIC_URL + '/collectlogs.zip', 'collectlogs.zip');\n };\n  return (\n    <div className=\"instructions\">\n      <Navbar/>\n      <h1>Instructions</h1>\n      <section>\n        <h2>Installation</h2>\n        <pre className=\"code\">\n          git clone https://gitlab.com/hieulw/cicflowmeter\n          <br />\n          cd cicflowmeter\n          <br />\n          python setup.py install\n        </pre>\n        <p className=\"or\">or</p>\n        <pre className=\"code\">pip install cicflowmeter</pre>\n      </section>\n      <section>\n        <h2>Usage</h2>\n        <pre className=\"code\">\n          usage: cicflowmeter [-h] (-i INPUT_INTERFACE | -f INPUT_FILE) [-c] [-u URL_MODEL] output\n          <br />\n          positional arguments:\n          <br />\n          output output file name (in flow mode) or directory (in sequence mode)\n          <br />\n          optional arguments:\n          <br />\n          -h, --help show this help message and exit\n          <br />\n          -i INPUT_INTERFACE capture online data from INPUT_INTERFACE\n          <br />\n          -f INPUT_FILE capture offline data from INPUT_FILE\n          <br />\n          -c, --csv, --flow output flows as csv\n        </pre>\n      </section>\n      <section>\n        <h3>Convert pcap file to flow csv:</h3>\n        <pre className=\"code\">cicflowmeter -f example.pcap -c flows.csv</pre>\n        <h3>Sniff packets real-time from interface to flow csv: (need root permission)</h3>\n        <pre className=\"code\">cicflowmeter -i eth0 -c flows.csv</pre>\n      </section>\n      <a style={{paddingLeft:\"50%\"}}> or </a>\n      <div className='upload-section'>\n        <a href='#' onClick={downloadfile} className='upload-button'>\n          Download Now\n        </a>\n      </div>\n      \n\n\n\n    </div>\n  );\n}\n\nexport default Instructions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}